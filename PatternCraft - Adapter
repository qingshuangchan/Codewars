using System;

public class Target
{
    public int Health { get; set; }
}

public interface IUnit
{
    void Attack(Target target);
}

public class Marine : IUnit
{
    public void Attack(Target target)
    {
        target.Health -= 6;
    }
}

public class Zealot : IUnit
{
    public void Attack(Target target)
    {
        target.Health -= 8;
    }
}

public class Zergling : IUnit
{
    public void Attack(Target target)
    {
        target.Health -= 5;
    }
}

public class Mario
{
    public int jumpAttack()
    {
        Console.WriteLine("Mamamia!");
        return 3;
    }
}

public class MarioAdapter : IUnit
{
    Mario mario = null;
    
    public MarioAdapter(Mario mario)
    {
        this.mario = mario;
    }

    public void Attack(Target target)
    {
        target.Health -= mario.jumpAttack();
    }
}

[TestFixture]
public class KataTestf
{
    [Test]
    public void _0_MarioAdapter_Can_Attack()
    {
        var marioAdapter = new MarioAdapter(new Mario());
        var target = new Target { Health = 33 };

        marioAdapter.Attack(target);

        Assert.AreEqual(30, target.Health);
    }
}
